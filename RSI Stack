// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© MarlosClock
//@version=5
indicator(title="RSI Stack", shorttitle="RSI Stack", format=format.price, precision=1, timeframe="", timeframe_gaps=true)
calc_on_every_tick = true
ma(source, length, type) =>
    switch type
        "SMA" => ta.sma(source, length)
        "Bollinger Bands" => ta.sma(source, length)
        "EMA" => ta.ema(source, length)
        "SMMA (RMA)" => ta.rma(source, length)
        "WMA" => ta.wma(source, length)
        "VWMA" => ta.vwma(source, length)

rsiLengthInput = input.int(14, minval=1, title="RSI Length", group="RSI Settings")
rsiSourceInput = input.source(close, "Source", group="RSI Settings")
maTypeInput = input.string("SMA", title="MA Type", options=["SMA", "Bollinger Bands", "EMA", "SMMA (RMA)", "WMA", "VWMA"], group="MA Settings")
maLengthInput = input.int(14, title="MA Length", group="MA Settings")
bbMultInput = input.float(2.0, minval=0.001, maxval=50, title="BB StdDev", group="MA Settings")

up = ta.rma(math.max(ta.change(rsiSourceInput), 0), rsiLengthInput)
down = ta.rma(-math.min(ta.change(rsiSourceInput), 0), rsiLengthInput)
rsi = down == 0 ? 100 : up == 0 ? 0 : 100 - (100 / (1 + up / down))
rsiMA = ma(rsi, maLengthInput, maTypeInput)
isBB = maTypeInput == "Bollinger Bands"

plot(rsi, "RSI", color=color.white)
plot(rsiMA, "RSI-based MA", color=color.yellow)
rsiUpperBand = hline(80, "RSI Upper Band", color=#787B86)
hline(50, "RSI Middle Band", color=color.new(#787B86, 50))
rsiLowerBand = hline(20, "RSI Lower Band", color=#787B86)
fill(rsiUpperBand, rsiLowerBand, color=color.rgb(255, 255, 255, 95), title="RSI Background Fill")
bbUpperBand = plot(isBB ? rsiMA + ta.stdev(rsi, maLengthInput) * bbMultInput : na, title = "Upper Bollinger Band", color=color.green)
bbLowerBand = plot(isBB ? rsiMA - ta.stdev(rsi, maLengthInput) * bbMultInput : na, title = "Lower Bollinger Band", color=color.green)
fill(bbUpperBand, bbLowerBand, color= isBB ? color.new(color.white, 95) : na, title="Bollinger Bands Background Fill")

smoothK = input.int(3, "K", minval=1)
smoothD = input.int(3, "D", minval=1)
lengthRSI = input.int(14, "RSI Length", minval=1)
lengthStoch = input.int(14, "Stochastic Length", minval=1)
src = input(close, title="RSI Source")
rsi1 = ta.rsi(src, lengthRSI)
k = ta.sma(ta.stoch(rsi1, rsi1, rsi1, lengthStoch), smoothK)
d = ta.sma(k, smoothD)
plot(k, "K", color=#ffbf00)
plot(d, "D", color=color.black)
h0 = hline(80, "Upper Band", color=#787B86)
h1 = hline(20, "Lower Band", color=#787B86)
fill(h0, h1, color=color.rgb(255, 255, 255, 95), title="Background")
pivot1 = hline(75, "Upper pivot 75",color=color.rgb(214,0,255, 80),linestyle=hline.style_dashed)
pivot2 = hline(67, "Upper pivot 67",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot3 = hline(62.5,"Upper pivot 62.5",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot4 = hline(57, "Upper pivot 57",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot5 = hline(53.5, "Upper pivot 53.5",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot6 = hline(47, "Lower pivot 47",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot7 = hline(42, "Lower pivot 42",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot8 = hline(37, "Lower pivot 37",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot9 = hline(33, "Lower pivot 33",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)
pivot10= hline(27, "Lower pivot 27",color=color.rgb(255, 255, 255, 80),linestyle=hline.style_dashed)


//coloring method below

src1 = close, len1 = input.int(70, minval=1, title="UpLevel")
src2 = close, len2 = input.int(30, minval=1, title="DownLevel")
isup() => rsi > len1
isdown() => rsi < len2
barcolor(isup() ? color.green: isdown() ? color.red : na )
